{
	// Place your practice workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"code snippet to start with leetcode problem in cpp": {
		"scope": "cpp",
		"prefix": "start",
		"body": [
			"#include<bits/stdc++.h>",
			"#include \"print.h\" ",
			"using namespace std;",
			"\n\n\nint main(){\n\tSolution s;",
			"}",
		],
		"description": "cpp starter snipped"
	},

	// vector arrays
	"vector integer": {
		"scope": "cpp",
		"prefix": "vi",
		"body": [
			"vector<int> a;",
		],
		"description": "cpp starter snipped"
	},
	"vector float": {
		"scope": "cpp",
		"prefix": "vf",
		"body": [
			"vector<float> a;",
		],
		"description": "cpp starter snipped"
	},
	"vector char": {
		"scope": "cpp",
		"prefix": "vc",
		"body": [
			"vector<char> a;",
		],
		"description": "cpp starter snipped"
	},
	"vector string": {
		"scope": "cpp",
		"prefix": "vs",
		"body": [
			"vector<string> a;",
		],
		"description": "cpp starter snipped"
	},
	"vector vector integer": {
		"scope": "cpp",
		"prefix": "vvi",
		"body": [
			"vector<vector<int>> a;",
		],
		"description": "cpp starter snipped"
	},
	"vector vector float": {
		"scope": "cpp",
		"prefix": "vvf",
		"body": [
			"vector<vector<float>> a;",
		],
		"description": "cpp starter snipped"
	},
	"vector vector char": {
		"scope": "cpp",
		"prefix": "vvc",
		"body": [
			"vector<vector<char>> a;",
		],
		"description": "cpp starter snipped"
	},
	"vector vector string": {
		"scope": "cpp",
		"prefix": "vvs",
		"body": [
			"vector<vector<string>> a;",
		],
		"description": "cpp starter snipped"
	},


	"list builder from a vector int": {
		"scope": "cpp",
		"prefix": "l_build",
		"body": [
			"ListNode * head,*temp;",
			"head=temp=new ListNode(a[0]);",
			"for(int i=1;i<a.size();i++){",
			"\ttemp->next=new ListNode(a[i]);",
			"\ttemp=temp->next;",
			"}",
		],
		"description": "cpp starter snipped"
	},
	"cout endl": {
		"scope": "cpp",
		"prefix": "nl",
		"body": [
			"cout<<endl;",
		],
		"description": "cpp starter snipped"
	},
}